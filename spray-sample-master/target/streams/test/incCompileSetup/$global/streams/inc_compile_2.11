format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes
compile options:
7 items
0 -> -deprecation
1 -> -unchecked
2 -> -encoding
3 -> UTF-8
4 -> -target:jvm-1.7
5 -> -Yclosure-elim
6 -> -Yinline
javac options:
2 items
0 -> -Xlint:unchecked
1 -> -Xlint:deprecation
compiler version:
1 items
0 -> 2.11.4
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
8 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$1.class
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$2.class
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$3.class
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$4.class
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$5$$anonfun$6.class
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$5$$anonfun$7.class
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$5.class
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec.class
binary dependencies:
5 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> C:\Users\hossam\.ivy2\cache\com.typesafe.akka\akka-actor_2.11\jars\akka-actor_2.11-2.5.8.jar
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> C:\Users\hossam\.ivy2\cache\io.spray\spray-testkit_2.11\jars\spray-testkit_2.11-1.3.1.jar
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> C:\Users\hossam\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.4.jar
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> C:\Users\hossam\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.2.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
2 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.Main$
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.SpraySampleService
inheritance internal dependencies:
0 items
inheritance external dependencies:
1 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.SpraySampleService
class names:
8 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.MainSpec
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.MainSpec$$anonfun$1
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.MainSpec$$anonfun$2
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.MainSpec$$anonfun$3
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.MainSpec$$anonfun$4
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.MainSpec$$anonfun$5
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.MainSpec$$anonfun$5$$anonfun$6
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com.mlh.spraysample.basic.MainSpec$$anonfun$5$$anonfun$7
used names:
37 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> <init>
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> FlatSpec
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> Main
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> MainSpec
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> Matchers
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> ScalatestRouteTest
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> SpraySampleService
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> apply
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> basic
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> be
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> com
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> compose
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> composeFunc
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> convertToAnyShouldWrapper
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> convertToInAndIgnoreMethods
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> convertToStringShouldWrapper
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> fact
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> factorial
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> in
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> inc
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> lenDecode
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> lenEncode
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> mlh
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> org
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> palind
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> palindrome
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> result
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> runLengthDecode
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> runLengthEncode
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> scalatest
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> shorthandTestRegistrationFunction
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> should
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> spray
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> spraysample
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> square
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> system
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> testkit
product stamps:
8 items
E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$1.class -> lastModified(1514925286358)
E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$2.class -> lastModified(1514925286380)
E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$3.class -> lastModified(1514925286386)
E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$4.class -> lastModified(1514925286390)
E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$5$$anonfun$6.class -> lastModified(1514925286402)
E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$5$$anonfun$7.class -> lastModified(1514925286409)
E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec$$anonfun$5.class -> lastModified(1514925286396)
E:\programs\scala\projects\spray-sample-master\target\scala-2.11\test-classes\com\mlh\spraysample\basic\MainSpec.class -> lastModified(1514925286345)
source stamps:
1 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> hash(d12d80b48e52f93ecec1ed2a252fe8ed5ca5f53c)
binary stamps:
5 items
C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar -> lastModified(1506719413288)
C:\Users\hossam\.ivy2\cache\com.typesafe.akka\akka-actor_2.11\jars\akka-actor_2.11-2.5.8.jar -> lastModified(1512667721000)
C:\Users\hossam\.ivy2\cache\io.spray\spray-testkit_2.11\jars\spray-testkit_2.11-1.3.1.jar -> lastModified(1403704604000)
C:\Users\hossam\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.4.jar -> lastModified(1414078488000)
C:\Users\hossam\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.2.jar -> lastModified(1408418856000)
class names:
5 items
C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar -> java.lang.String
C:\Users\hossam\.ivy2\cache\com.typesafe.akka\akka-actor_2.11\jars\akka-actor_2.11-2.5.8.jar -> akka.actor.ActorSystem
C:\Users\hossam\.ivy2\cache\io.spray\spray-testkit_2.11\jars\spray-testkit_2.11-1.3.1.jar -> spray.testkit.ScalatestRouteTest
C:\Users\hossam\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.4.jar -> scala.Int
C:\Users\hossam\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.2.jar -> org.scalatest.Matchers
internal apis:
1 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> 

external apis:
2 items
com.mlh.spraysample.Main$ -> 

com.mlh.spraysample.basic.SpraySampleService -> 

source infos:
1 items
E:\programs\scala\projects\spray-sample-master\src\test\scala\basic\BasicSampleSpec.scala -> 
AAAAAAAAAAA=
compilations:
6 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYLhrtah1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATUU6XHByb2dyYW1zXHNjYWxhXHByb2plY3RzXHNwcmF5LXNhbXBsZS1tYXN0ZXJcdGFyZ2V0XHNjYWxhLTIuMTFcdGVzdC1jbGFzc2VzdAABLw==
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYLhuNft1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATUU6XHByb2dyYW1zXHNjYWxhXHByb2plY3RzXHNwcmF5LXNhbXBsZS1tYXN0ZXJcdGFyZ2V0XHNjYWxhLTIuMTFcdGVzdC1jbGFzc2VzdAABLw==
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYLiIjtx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATUU6XHByb2dyYW1zXHNjYWxhXHByb2plY3RzXHNwcmF5LXNhbXBsZS1tYXN0ZXJcdGFyZ2V0XHNjYWxhLTIuMTFcdGVzdC1jbGFzc2VzdAABLw==
3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYLiKEYh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATUU6XHByb2dyYW1zXHNjYWxhXHByb2plY3RzXHNwcmF5LXNhbXBsZS1tYXN0ZXJcdGFyZ2V0XHNjYWxhLTIuMTFcdGVzdC1jbGFzc2VzdAABLw==
4 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYLiT5G51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATUU6XHByb2dyYW1zXHNjYWxhXHByb2plY3RzXHNwcmF5LXNhbXBsZS1tYXN0ZXJcdGFyZ2V0XHNjYWxhLTIuMTFcdGVzdC1jbGFzc2VzdAABLw==
5 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYLiVRbd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATUU6XHByb2dyYW1zXHNjYWxhXHByb2plY3RzXHNwcmF5LXNhbXBsZS1tYXN0ZXJcdGFyZ2V0XHNjYWxhLTIuMTFcdGVzdC1jbGFzc2VzdAABLw==
